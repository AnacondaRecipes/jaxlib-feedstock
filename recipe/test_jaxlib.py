import numpy as np
from jaxlib import xla_client as xc
xops = xc.ops

c = xc.XlaBuilder("simple_scalar")
param_shape = xc.Shape.array_shape(np.dtype(np.float32), ())
x = xops.Parameter(c, 0, param_shape)
y = xops.Sin(x)
computation = c.Build()
cpu_backend = xc.make_cpu_client()

#compiled_computation = cpu_backend.compile(computation)
# See error generated by previous line below:
#TypeError: compile(): incompatible function arguments. The following argument types are supported:
#1. (self: jaxlib.xla_extension.Client, computation: str, compile_options: 
#   jaxlib.xla_extension.CompileOptions = <jaxlib.xla_extension.CompileOptions object at 0x103dc4a70>,
#   host_callbacks: List[capsule] = []) -> xla::PyLoadedExecutable
